name: EAS Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Setup repo
      uses: actions/checkout@v4
    
    - name: Setup node
      uses: actions/setup-node@v4.0.2
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        eas-version: latest
        token: ${{ secrets.EXPO_TOKEN }}

    - name: Install dependencies
      run: npm ci

    - name: Build APK
      env:
        EXPO_PUBLIC_STREAM_API_KEY: ${{ secrets.EXPO_PUBLIC_STREAM_API_KEY }}
        EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
        EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.EXPO_PUBLIC_SUPABASE_ANON_KEY }}
        SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
        SUPABASE_API_KEY: ${{ secrets.SUPABASE_API_KEY }}
      run: |
        eas build --platform android --profile preview --non-interactive
        echo "APK_URL=$(eas build:list --profile preview | grep -o 'http[^ ]*')" >> $GITHUB_ENV

    - name: Download APK file
      if: env.APK_URL
      run: |
        curl -L ${{ env.APK_URL }} -o app-release.apk

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: apk
        path: app-release.apk

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download APK artifact
      uses: actions/download-artifact@v3
      with:
        name: apk
        path: ./apk

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./apk/app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/vnd.android.package-archive
